=============================
The ``2-matrix_divided`` module
=============================

Using 'matrix_divided'

-------------------

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:
    >>> matrix_divided("matrix", 2)
    Traceback (most recent call last):
    ...
        raise TypeError(_typeError1)
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([1, 2, 3], 2)
    Traceback (most recent call last):
    ...
        raise TypeError(_typeError1)
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "num")
    Traceback (most recent call last):
    ...
        raise TypeError(_typeError3)
    TypeError: div must be a number
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
        raise ZeroDivisionError(_zeroError)
    ZeroDivisionError: division by zero
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], -3)
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]
    >>> matrix_divided([[1, 2, 3], [4, 5, "num"]], 3)
    Traceback (most recent call last):
    ...
        raise TypeError(_typeError1)
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([[1, 2, 3], [4, 5, "num"]], float('inf'))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
    >>> matrix_divided([[1, 2, 3], [1, 2]], 3)
    Traceback (most recent call last):
    ...
        raise TypeError(_typeError2)
    TypeError: Each row of the matrix must have the same size

