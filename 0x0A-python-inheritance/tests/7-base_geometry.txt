=============================
The ``7-base_geometry`` module
=============================

Using 'BaseGeometry'

-------------------

Now use it:
  >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
  >>> bg = BaseGeometry()
  >>> bg.area()
  Traceback (most recent call last):
    ...
      raise Exception("area() is not implemented")
  Exception: area() is not implemented
  >>> bg.integer_validator("age")
  Traceback (most recent call last):
    ...
  TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
  >>> bg.integer_validator("age", 1)
  >>> bg.integer_validator("age", 0)
  Traceback (most recent call last):
    ...
      raise ValueError(f"{name} must be greater than 0")
  ValueError: age must be greater than 0
  >>> bg.integer_validator("age", -4)
  Traceback (most recent call last):
    ...
      raise ValueError(f"{name} must be greater than 0")
  ValueError: age must be greater than 0
  >>> bg.integer_validator("age", "4")
  Traceback (most recent call last):
    ...
      raise TypeError(f"{name} must be an integer")
  TypeError: age must be an integer
  >>> bg.integer_validator("age", (4,))
  Traceback (most recent call last):
    ...
      raise TypeError(f"{name} must be an integer")
  TypeError: age must be an integer
  >>> bg.integer_validator("age", [3])
  Traceback (most recent call last):
    ...
      raise TypeError(f"{name} must be an integer")
  TypeError: age must be an integer
  >>> bg.integer_validator("age", True)
  Traceback (most recent call last):
    ...
      raise TypeError(f"{name} must be an integer")
  TypeError: age must be an integer
  >>> bg.integer_validator("age", None)
  Traceback (most recent call last):
    ...
      raise TypeError(f"{name} must be an integer")
  TypeError: age must be an integer
  >>> bg.integer_validator("age", {3, 4})
  Traceback (most recent call last):
    ...
      raise TypeError(f"{name} must be an integer")
  TypeError: age must be an integer
  >>> bg.integer_validator("age", 13.5)
  Traceback (most recent call last):
    ...
      raise TypeError(f"{name} must be an integer")
  TypeError: age must be an integer
  >>> print(dir(bg))
  ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'area', 'integer_validator']